exports {
    test;
};
let std = import("src/std.txt");
//let input = ">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>"; // 1514285714288
let input = "><<>><<<>><>><<<<>><<>>>><<<<>>><>>><>><><><<<<>><<<>><<<>>>><>>>><<>>>><<>><<<><<<<>>><<<<>>>><<<<>><>>><<<<>><>>><<<>><<>>><<><<<<>><<<>><><>><>>>><<>><<<<><<><<<<><<<><<<>><<<<>><<<<>>><<<>>><<<<>>>><<<<>><<><<<<>>><><<<>>><<<>><<<>>>><<><<>>>><<<<><<>>><<<>><<<<>>><><<><<>><<>>>><>><<<>>>><<>>><>><<<>>><<<<>><<<<>>><<<<>>>><<>>>><>>><<<<>><<<<>>>><<<>><>>>><<>><<>><>><<<<>>><<<>>>><<<>>>><><>>>><<<><<<<>><<<<><<<>>>><<>>>><<<<>><<<<><<><<>>>><<<<>>><<<>>>><<<>>><>>>><<<>><<<<><>>><<<<>><<<<>>><><>>><<>><<<>>><<>>>><>>><<>><<<>>>><<<>><<<>>><><<<<><<<><<<<><<>><<<><<<><<<>><<>>><<>><<<<>>>><>><<<>>>><><<><<<<><<><<<><<>><<<>>>><<<>>>><<<<><>><<<<><<><>><<<<><<>><<<><><<><<>><><<<<><>><<>><<<>><<>>><<>>><><>><>>>><>>><<<<><<<<>><<<>>><<>><<<<>><<><>><<<>><><<<<><>>><<<<>>><>><>>><<><<<<>><<<<>>>><>><<>>>><>>>><<<>>><<<>>>><<<<>><<><<>>><<>><<<<>><>>><<>>><<>>>><<<<>><<<><<<>>><<<<><<<<>><<>>><<<<>>><<<<>>>><<><><<>>>><<<<>>><><><<>><<>>><>>>><>><<<<>><><>>><>><<<>><<>><<<<>><<>>>><><<<<>><<<>>><<><>><>>><<<>><<<<>>><<>>><>>><<<><<<<>><<>>><<>>><<>>><<<<>>>><<<>>><>>><<<>><>>>><<<>>>><<<<><>><<<<>>><<<>><<<<>><<>><<<>>>><<<>><<<<>><<<<><>>>><<<<>><<<<><<<>>><<<<><<<>>><>>><<<>><<>>>><<<><>><>>><<<>><><<<>><<><<<>>><<<<><<<>><<<>>>><>>>><>><<<<>>><<<<>>><>>><<><<<>><<>>><<<>>><<<<>>>><>><<<<>>>><<<>><<<>>>><<>><<<<>>><><<<><<<>>>><>>>><<<><>>><<<<><><<>><<<>>>><<<>>><>>><>>>><<<<>>>><><<<><<>>>><<>>><<<<>>><>>>><<<<>><<<<>>>><<><<<<>><<>><<<><<<<>>>><<<<>>><<<>><<>>>><><<<><<>>><<<<><<<<><>><>>>><<>><<<>>><>><<<>>>><<<>>><<><>><<<>><<<<>>><<<<><><<>>><<<<>>>><<>>>><<>>><<><<>><<>><<>><<<><><<>>>><<<>>>><>>>><<>><<>><<<<>><>>><<<><<>>><>>>><<<>>>><><<<<><<<>>>><<>><<<<>>><<<<><>>><<<><<>>>><<<<>>>><><<<>>><>><<><<>>>><<<>>><>><<<<><<<<>><<>>>><<<>>><><><<<<>>><<<>><<<>>><<>><<<<>>><<<<>>>><>>><>>><<<<>><<>><<<>>><<<<><<><<<<>><>>><<<<>><<<<>><<>><>><<<<>><<<<><>>>><<<><<<>>><><<>><<>><<>>>><<<>>>><<<<><<<<><><<<>>>><<<<><<<<><<><<<>><<<<>>><<<><<>><<<>>><<>>>><<<>><<<<><<<><<<<>>><<<>><<<<>>><<<<>><>>>><>>><<>>><<>><<>><<>><<>>><<<<><<<<>><<<<><<<<>>>><<<>>><>>>><><<>>>><>>><<<>><>>>><<>>><<<<>><<>><<<<>><<>>><<<<><><<>><<>>><<<<>>><<<><<>>><<<>>>><<>><>><<>>>><<<<>>>><><<<<>>>><>>><<>>>><<<<><<><<<<><<<<>><>><<<<><<<>>><<<>><>>><<<<>><<><<<<>>><>>>><<<>>><<<>>><<>>>><<<><>><<<>><<<><>>>><<>><<<<><<<<>>><<<>>>><><><<<>>><><>><<<<>><<><><<>>><>>><<<>>><<>>>><<>><<<>><>>><<>>><<<>><><<<><>><<><<<<><>>>><<<<>>>><>>><<>><<>>><<<<><<>>><<<<>>><<>>><><>>>><>>><>>>><<>><<>>>><>>>><>><<>><<<><<<>>>><<<<><<<<><>><<>>><<<<><<<>><<<><>>><><><<>><<>><>><<>>>><<<<><<><<>>><>><<>>>><<<<>>><<<>><<<>>><<>><<>>>><<<>>>><>>><>><>><<>>><<<<>>><<<<>>><<<><<<<>><<><<<>>><<<<>><<>>>><<<<>>>><<<>>>><<<<>>>><>><<><<>>>><<<<>>><<<<>>>><>>>><<<<><<<><<<<>><>>><>><><<<<>><<<<><<>>>><>>>><<<><<><<>>><<<>>>><<<>>><<<<>>><<>>><>>>><<<<>><<>>><><<<<><<><>>><<<<>>>><>><><<<>>>><>>>><<<<>>><<<>>>><<><>>><>>>><<<><>>>><<<<><<<<>>><>>><<<<>>><<<>>><<>>>><><<>><<<<>>>><<<><>>><>>>><<>>>><<>><<>>><<><<<>>>><<<>>>><<>>>><>>><<<<>>>><<<<>>>><<<<>>><<><<<<><>>>><>><<<><<>><<>><<>>>><<<<>>>><<<><<<>><<<>>><<<>>>><<><<><<<>><<<<>>><<<><<>><<><<>><<>>>><<>>><<<>><<<<><>><<<>>><>>><>><<><><>>><<><>><<<><>>>><<<>>><<<<>>><<<<>>><<><<>>>><>>><<<>>>><<<>><><<<<>><><<>>>><<<<>>><<<><<<<><<<><<>><<<><<<<>>>><><<<>>>><<<<>>>><<<<>>><<>>><<>><<<>>><>>>><><<>><<<<>>>><<>>>><<<>>><<>>><<<>>>><<<>>><<<>>><>>>><<>>><>>>><<<>><<>><<><<<>>><<<><<<<><<>>><<<>>>><<<<>><<>>><<<<>>>><>>><<>><<<<>><<><><<>>><<<<>>><<>><<<>><<>>>><<>><><>>><<<<>>>><>>><<>><>>>><<<<>>>><<<<>>>><><>><<<>>><<<><<><<<><<<<>>>><<><<<>>><>><>>><<<>>>><<<>>><<<>>>><<>>>><>><<<>>>><<><<<>><<<<>>><<><<<>><<<>>>><<<<>>><><<>>>><><>><<<>>><<>><>>>><<<<>><<<>>>><<<>>>><<>><<<<>>><<<>>><<<<>><>>><<<>>><<>><<><<>>><<<><<<<>><<<><<><<<>>>><<<>><>><><<<<>>><<>>><<<>>><<<<>>>><>>><<<>><<<<>><<<<>>>><<<>>>><<>>><<>><<<<>><<<>><<<<>>><<<<>>>><>><<<>>>><>><<<<>><<>><>>>><<<>>><<<<>>>><<>>>><>><>>><><>>><<><<<<>>><<<>>>><<<<>><<>>>><<<>>>><<<>>>><<<<>>><<><<<>>><<<>><<<<>>>><<<>>>><<<<><<<<>>><<<<>><<<>><<><<>>><<<<>>><><<<>><>>>><<<>><<<>><<<>>><>>>><<<<>>><<<>><<>>><<<>>>><<>><<><>>><<<>>>><<<><<><<>><<<>>>><>>>><<<>>><<<<><<<>><<<<>>><<<<>>><<><<>>><<<><<>>>><<<>><<<<>>><<<>>><<><<>>>><>>>><<<>>>><><<<>>><>>>><<>>><>>><<>><<><>>><<>>><>><<<><<<>>>><><<<><<<>>><<>>>><<<><<<<><<<<>>><<<<>>>><>><<<<><<<>>><>>><<><<<<>>><<>><<<<><><<>>><><<><>><<><<<<><<<>>><>>><<<<>><<>><<<><>>>><<<<>>>><<<<>>><><<><<<>>>><<>><<>><>>>><<>>><>>>><<<<>><>>>><>>>><<<<><<<<>><<>>>><<<><<><>>>><<<>>><<<>>><<<><>>>><>>><>>>><<>><<<<>>><<>>>><<>>><<>>><<<><<<><>><<<><>>><<>>>><<>>>><<><<>>><>>>><<<><<<<>>><>><<<<>>><<><<>>>><<<<><<<>>>><<>><<<>>>><>>><<><><<<><<<<>>><<<<>><<<<>><<<<>>><<<>>><<<>>><>><<<><<<><<<>><><<<>>>><<><<<><<<<>>>><>>>><<<><>>>><<<<>><>>>><<>><<>><<<><<<>>>><<<<>>><<<<>>>><>>><<<<>>>><>>><<<<>>>><<<<>>>><>>>><<<<><<<<><<<<>><>>><<<<><>>><<<<>>>><<<<>><<>>><<<<>><<<<><<<<>>>><<<<><<<<>>>><<<<>>>><<<<>>><<><<>>><<<<>>><<<>><<<>>>><<<>><>><<>>>><<<>><<<><<<>>>><<<<>>><<<><<<<>>><<<<>><<>><<>>><<>>>><>>><<><<<>>><<<><<>>><<<>><>><<<><<>>><<<><>>><<<><<><<><<>>><<<<><<<>>><>>><<<>>><<>><<>>><<>><>><<<><<<<><>>>><<<><<><<>>><<<>>>><<<<>>>><<<<><<>>>><<<>>><<<<>>><<<>><<<<>>>><>><><>>>><<>><<<<><<<>>><><>>><><>>><<>><<<<><<>><<<>>><<<><>>>><<<>><<>>>><<<><<>>>><<><<<><<<<>>>><>><<>><<<<>>><<>><<>>>><<<><<<>>><<<>>><<<<>><<<><>><<<<>>>><<<<>><<<<>>>><<<<>>><><<<<>>>><<>><>>><<<<>>><<<<>>>><<>>>><>>>><<>><<<<>><<<<>><<>>>><<<<>>><<>>><<<<>>>><<<<>>>><>><<>>>><<>><><<<<>><<><<<>>><>>><<<<><>>><><<<>>><<><<<>><>><<<<>><><<<<>><<<>><<<<><<<>><>>>><<<>>>><<<>>><<<<>><<<>>><<<><<<><<<>><<<<><<>>>><<<><<>><>>><>>><>><<<>><<<>><<<<>>><<<<>>><<<<><<>><>><<<>>>><<<>>>><>>><>><<<<>>>><<<>>><<<>>>><>><<<<>>><><<<<>>><<><>>><<<<>><>>><<<<>>>><>>><<>>>><<>><>>><<>>><<>><<<><<<<>><>>><<>><<<><><>>>><<>>><<<<>>>><<<><<<<>><>><<<>>><<<>><<<>>>><<<><><<<<>>><<<><<<><<><<>><<>>>><<<<><>>><<<>>>><<<>>>><<<>>>><<<>><>><>>><<<<><<<<>><<<<>>>><>>><<>>>><<<<><<>><>><<><>>>><>>><<<>><<<>><>><<<>><<<><<<<>>>><<<<><<<>><<>><<><<<<><<>>><<<>>>><<<><<<<>><<<><>><<<>>>><<><<>>><<<<>><<<<>>>><>>>><<>>>><<<>>><<><<<>>>><>><<<>>><>><<<>>>><<<<>>>><<<>><>>>><<<<>>><<<<>>><>>><<<>>>><<><<<<><<>>>><>>>><<<>><>><>>><<><><>>><<>>><>>>><<<<>>>><<<<>>><>><<<>><<>><<>><<><<<>>><<<><<<<>>><<<>>>><<>><<<>>>><<>>><<<<>><<>>><<<<><<><><<<<><<<><<<>>>><><<<><>>>><<>>>><<<<>><<<><<>>><<>><<<<>><<<<>><<><>><>>><<<>>>><><<<><<<<>>>><<<<><>>><<><<>>>><>><>>><<<<>>>><>>>><<<<><<>>><>>>><<<<>>>><<<<>>><<<><<<<>>><<<<>>><>>>><>>>><<><<<<><<<>>><><<>>><>>><<<>>><<<>><<>>><<<><<><<<<>>><>>>><<>>>><<<>><<>>>><>>><<><<>><<<>>>><<<><<<<>>>><<<><<>><>>><<>><<<<>><><>>>><<<<>><<>>><<>>>><<><<<<><<>><<><<<<><<<<><<>>>><>><<>>>><>>><<<>>>><<<>><<<>>><<<>><<<<>>><><<><><<<>><<>>><<<>>><>><<><>>><>><<<<>>>><>><<<<>>>><>><<<>>><<>><<>><<>>>><<><<<>>><<<<><>><<<>>>><<>>>><<<<>>><<<<>>>><<<<><<<>>>><<<><<<<><<<<>>>><>><<<>>><<<<><<><<>><<<<>>>><<<<>>>><<<<>>><>>><<>>><>>>><<<<>>>><<>><<><>>>><<>>>><<>><<<<>>>><<<<>>>><<<>>>><<>>><<>>><<<>>>><<>>>><<<><>><<<><<><<>><<<<>>><>>>><<<<>>><><<<>>><<>>>><>>><<>>>><<>>><<>>>><>>><<<<>>><<<><>>><<<<>>>><<<>>><><<<<>><<<<>>><<>>>><<<><><><<<>>><<<>>><>><<<>><<<>>><<<>>>><>>>><<<<>>><>>><<<><>><<>><<<<>>>><<<>><>>><<>>>><<<>>><><<<<>>><<<>>>><>><>>><<><<<>>>><<<<>>><<<>>><<>>><<<>>>><<<<>>><>>>><<<<><<<>>><<<>>>><>><<<>>><<><<<<>><<>><<><<<<><<<><<>>>><<>><<><<<>><<<<>>>><<><<<>>><<<>>><<<<>>><<<<><<<<>><<<><<>>>><<<<>><<<>>><><<>>>><<>>><<<<><<<>><<>><<>><<>><<>>><<<>>>><<>>>><<<>><>>>><<<>><<>>><<<<><<<>>><<<<>><<<>>>><>>>><<<>><<<<><<<>>><>><<<>>>><>><>>><><<<<><<<<>>><<<<>>><<<>>>><<>>>><<<<>>>><<<><<<>>><<>>>><<>>>><<<<>><<>>>><<>>>><<><<<<>>>><>><><<<<>>><<<<>>><<>><<><>>>><<>>>><<<>>><><<>><<>>>><<>>>><<<<>>>><<><<>><<<>><<<><>><>>>><>>><<<>><<<<><<<<><<><<>>>><<<<><>>>><<<<>>><<<<>>>><<<<>>><<<>>><<<<><><<<<>><<<<>>>><<>><>>><<<<><<<>>>><<<>>><>>><<>>>><<<<>>><<>>>><>>>><<<><<<>>>><<>>>><<<<>>><>>><<<><<><><<>><<>>><<><<<<><<>>>><<<><<<><<<>><<<<>><<<>>>><>>><<><<<<>>><>>>><>><<<<>>><<<>>>><>><>><<<><<<<>>><>>>><>>><>><<<<>>><<<<>>>><<>>>><<>>><>>><<><<<>>><<<>><<>>><><>>>><<><>><>><<<><<>>><><<<><<<><>>>><<<>><<>>>><>>><>>>><<<>>>><>>>><<<><<<<>>><<<>><<<>><<<<>><<<>>>><>>>><<<><<<>>><<<<>>>><<>>>><>>><<><<><<<>>>><<><>><>><<<<>><<<><<<>>>><>><>><<<<><<<<><<><<<<>>><<<>><<<><<>>><<>>><<>><<<><<>>>><<><<<<>>>><<<>>>><<>><>>>><<>>>><<<>>>><>>><<<<>>><<<<>>><<<>>><<<>>>><<>>><<>>>><<<><<>>>><<<>>><<<>><>>><<<<>>><<>><<<<>><<<>><<<>>>><<<<>><>>>><>><<<<>>><<>>><><<<<>><<<><<<<><>>><>>>><>><<<>>>><<><<<<>>><>>>><<>>><<<<>><<<><<<>><<<>>><<>>><<<<>>>><<>><>><<<>>><><<>>><>>><<<>><<<><>>><>><<<<><<<>><<<><><<<>>>><<<<>><<>>>><>>>><<>><<<<>><<<><<<><<>>><<<><>><><<<>>><<<<><<<<>>>><<<<><<<>>>><<<><<>>>><<>>>><<<<>><<<><<<<>>><<<<>>><<<>>><>><<>>>><<<><<>><<<<>>>><<<>><>>><<<>>>><<<><<<<><<><<<><><<><<>><<>><<<<><<<<>><<<<>>><><<<<><>><<>><>>><>>>><<<>>><<<>>><<<>>><<<><<<>>>><>>>><<<>><<<>><><<<>>>><<<<>>><<>><<<<>>><<>>><<><>>><<<<><<<>><>>><<>>>><>>><<<<><<<>>><<><<>><<>><<<>><<<<>><<>><>><<>>><><>>><<<>>>><<<>>>><<<<>><<<>>><<>>><<<>>>><<<>>><><<<>><><<>>><<<>>><<<><>>>><>>>><<<>><<<<><><<>><<>>>><><<<<>>>><<<<>>>><<<<>><<<><>>><<<<>>><<<<>>><>><<><>>>><>><<>>>><>>>><<<<>><<<>><><<<>>><><><<<>>>><<<><<>><<>>>><<<<>><<<>>><<>>>><<<<>><<<<>><<>>>><<>>><>><<>><<<<>><<>>>><<><><<<>>><<>><<>>><<<>>><<<>>><<<><<<<>>>><<<<>><<<>><>>><<<<>><><<<<>>><<>>>><<<>>>><<>>>><<<>>>><><<<>>><<<<>>><<>><<<<>>>><<<<>>><<<<>>><<<<>>><>>>><<<>><<<>>>><<<>>>><>><<<<>>>><>>>><>><<<>>>><<<>>>><>>><<><<<<>>>><><<<<>><<<>>>><<<><<<>>><<><<<><<>><<<<>><<<>>><>><<<>>><>>>><>>><<<<>>>><><>><<<>>><<<><<<<>>><><<<><<>><>>>><>>><<<>>>><<<<>>>><<<<>>><<>>><<>>><<<>><<<>>>><<<>>>><><<>><<<><>><<<>>><<<>><<<<><<>>><>>><<>>><<>><>>>><<>><><>>>><<><>><>>><<>>><<<<>><<<>><<>><<><<<<>>><>>><>>>><>>><>>>><<<<>>>><<>>><<<<>>>><<<>><<>><<<>><<<<>>><<>><<>>><<<<>>><>>>><<>>>><<>><<>>><<<>>>><><<<<>>>><<<>>><<><<<<>>>><<><<<<>>>><<>><<<<><>><<>>><<<>>><<>><<<<><<>><<><<<<><"; // 1584927536247
let pos = 0;
let WIDTH = 7;
let Field = func => struct {
    f: [];
    top: 0;
    offset: 0;
    tops: for x in std.range(WIDTH) => 0;
    shift: func(x) {
        this.top += x;
        this.offset += x;
        this.tops = for i in this.tops => i+x;
    };
    reserve: func(height) {
        let hb = ((height / 100)+1) * 100;
        //let hb = height;
        while len(this.f) < hb {
            this.f += [for x in std.range(WIDTH) => 0];
        };
    };
    print: func {
       for i in std.range(len(this.f)) {
           let line = this.f.(len(this.f)-1-i);
           for j in line {
               if j == 0 {
                   print(".");
               } else {
                   print("#");
               };
           };
           println("");
       };
    };
    set: func(x, y) {
        this.reserve(y+1-this.offset);
        this.f.(y-this.offset).(x) = 1;
        this.top = std.max(this.top, y);
        this.tops.(x) = std.max(this.tops.(x), y);
    };
    topskey: func {
        let ret = "";
        for i in std.range(std.min(10, this.top)) {
            for x in std.range(WIDTH) {
                ret += if this.free(x, this.top-i) => "0" else => "1";
            };
            ret += "/";
        };

        return ret;
    };
    free: func(x, y) {
        this.reserve(y+1-this.offset);
        return this.f.(y-this.offset).(x) == 0;
    };
    resize: func() {
        let mintops = this.tops.0;
        for x in this.tops => mintops = std.min(mintops, x);
        // can now remove everything below `mintops`
        let nf = [];
        mintops -= 10;
        if mintops-this.offset <= 0 {
            return null; // nothing to remove
        };

        for i in std.range(len(this.f)-(mintops-this.offset)) {
            nf += [this.f.(mintops-this.offset+i)];
        };
        this.f = nf;
        this.offset = mintops;
    };
};

let field = Field();
field.reserve(1);
for x in std.range(WIDTH) => field.set(x, 0);

let shapes = [
    ["####"],
    [".#.",
     "###",
     ".#."],
     ["..#",
      "..#",
      "###"],
     ["#",
      "#",
      "#",
      "#"],
     ["##",
      "##"]
];
let top = 0;
//let limit = 1000000000000;
let limit = 2022;
let round = 0;
let cache = map{};
while round < limit {
    if len(field.f) > 3000 {
        //print(round);
        //print("; resized field from " + itoa(len(field.f)) + " to ");
        field.resize();
        //println(len(field.f));
    };

    let y = field.top + 4;
    let x = 2;
    let shape = shapes.(round % len(shapes));
    let shapeh = len(shape);
    let shapew = len(shape.0);
    let iter = 0;

    let key = "shape=" + itoa(round % len(shapes)) + ";pos=" + itoa(pos % len(input)) + ";" + field.topskey();
    if has(cache, key) {
        //println("CACHE HIT: " + key);
        let prevtop, prevround = cache.(key);
        if round+round-prevround < limit {
            field.shift(field.top-prevtop);
            round += round-prevround;
            continue;
        } else {
            cache.(key) = field.top, round;
        };
    } else {
        cache.(key) = field.top, round;
    };

    while true {
        let dx = 0;
        if input.(pos % len(input)) == "<" {
            dx = -1;
        } else if input.(pos % len(input)) == ">" {
            dx = 1;
        };
        pos += 1;

        // check whether side movement is allowed
        if x+dx >= 0 && x+dx <= WIDTH-shapew {
            let ok = true;
            for sy, line in shape {
                for sx in std.range(len(line)) {
                    if line.(sx) == "." {
                        continue;
                    };
                    ok = ok && field.free(x+sx+dx, y+(shapeh-sy-1));
                    if !ok {
                        break;
                    };
                };
                if !ok {
                    break;
                };
            };

            if ok {
                x += dx;
            };
        };


        let ok = true;
        // first three iters are always ok
        iter++;
        if iter > 3 {
            for sy, line in shape {
                for sx in std.range(len(line)) {
                    if line.(sx) == "." {
                        continue;
                    };
                    ok = ok && field.free(x+sx, y+(shapeh-sy-1)-1);
                    if !ok {
                        break;
                    };
                };
                if !ok {
                    break;
                };
            };
        };

        if ok {
            y -= 1;
        } else {
            for sy, line in shape {
                for sx in std.range(len(line)) {
                    if line.(sx) == "." {
                        continue;
                    };

                    field.set(x+sx, y+(shapeh-sy-1));
                };
            };
            break;
        };
    };

    round++;
};
//println(field.top);
let test=func=>field.top==3200;